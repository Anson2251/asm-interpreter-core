name: Build and Release

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        architecture: [x64, arm64]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Setup QuickJS
        run: |
            curl -LO https://bellard.org/quickjs/quickjs-2024-01-13.tar.xz
            tar xvf quickjs-2024-01-13.tar.xz
            cd quickjs-2024-01-13
            sudo make install -j
        shell: bash

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: make compile
        shell: bash

      - name: Prepare Compiled Binaries
        run: |
            mv ./dist/interpreter ./dist/asm-interpreter-core-${{matrix.os}}-${{matrix.architecture}}
        shell: bash

      - name: Upload Compiled Binaries
        uses: actions/upload-artifact@v3
        with:
          name: asm-interpreter-core-${{matrix.os}}-${{matrix.architecture}}
          path: ./dist/asm-interpreter-core-${{matrix.os}}-${{matrix.architecture}}

      - name: Prepare Compiled JavaScript Files
        if: ${{ matrix.os == 'macos-latest' && matrix.architecture == 'x64' }}
        run: |
            mkdir ./dist/js/
            mv ./dist/interpreter-node.min.cjs ./dist/js/asm-interpreter-core-node.min.cjs
            mv ./dist/interpreter-qjs.min.mjs ./dist/js/asm-interpreter-core-qjs.min.mjs
        shell: bash
      
      # only upload one version
      - name: Upload Compiled JavaScript Files
        uses: actions/upload-artifact@v3
        if: ${{ matrix.os == 'macos-latest' && matrix.architecture == 'x64' }}
        with:
          name: asm-interpreter-core-js-cli
          path: ./dist/js
    
  upload-release-assets:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        architecture: [x64, arm64]
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Download Artifacts (Binary build)
        uses: actions/download-artifact@v3
        with:
          name: asm-interpreter-core-${{ matrix.os }}-${{ matrix.architecture }}
          path: ./artifacts

      - name: Download Artifacts (JS File)
        if: ${{ matrix.os == 'macos-latest' && matrix.architecture == 'x64' }}
        uses: actions/download-artifact@v3
        with:
          name: asm-interpreter-core-js-cli
          path: ./artifacts

      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Upload Assets to Release
        run: gh release upload ${{ github.event.release.tag_name }} ./artifacts/asm-interpreter-core*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

